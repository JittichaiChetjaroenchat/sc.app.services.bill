// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SC.App.Services.Bill.Database;

namespace SC.App.Services.Bill.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Bill", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BillChannelId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_channel_id");

                    b.Property<string>("BillNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bill_no");

                    b.Property<string>("BillStatusId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_status_id");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("channel_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeposit")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deposit");

                    b.Property<bool>("IsNewCustomer")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_new_customer");

                    b.Property<string>("Key")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("key");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("remark");

                    b.Property<string>("RunningNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("running_no");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("BillChannelId");

                    b.HasIndex("BillStatusId");

                    b.HasIndex("ChannelId", "BillNo")
                        .IsUnique();

                    b.ToTable("bills");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillChannel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("description");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("bill_channels");

                    b.HasData(
                        new
                        {
                            Id = "5413a227-1d32-c2fb-8f0c-b17b995bb9ca",
                            Code = "offline",
                            Description = "Offline",
                            Index = 1
                        },
                        new
                        {
                            Id = "71e7ca26-328c-0a18-7a0f-8e19d6d40a59",
                            Code = "facebook",
                            Description = "Facebook",
                            Index = 2
                        });
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("channel_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("CurrentNo")
                        .HasColumnType("int")
                        .HasColumnName("current_no");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId")
                        .IsUnique();

                    b.ToTable("bill_configurations");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillDiscount", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("percentage");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.ToTable("bill_discounts");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillNotification", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("BeforeCancelNotifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("before_cancel_notified_on");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<bool?>("CanNotifyBeforeCancel")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_notify_before_cancel");

                    b.Property<bool?>("CanNotifyCancel")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_notify_cancel");

                    b.Property<bool?>("CanNotifyIssue")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_notify_issue");

                    b.Property<bool?>("CanNotifySummary")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_notify_summary");

                    b.Property<DateTime?>("CancelNotifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("cancel_notified_on");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsBeforeCancelNotified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_before_cancel_notified");

                    b.Property<bool>("IsCancelNotified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_cancel_notified");

                    b.Property<bool>("IsIssueNotified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_issue_notified");

                    b.Property<bool>("IsSummaryNotified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_summary_notified");

                    b.Property<DateTime?>("IssueNotifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("issue_notified_on");

                    b.Property<DateTime?>("SummaryNotifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("summary_notified_on");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.ToTable("bill_notifications");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillPayment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<string>("BillPaymentTypeId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_payment_type_id");

                    b.Property<decimal?>("CodAddOnAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cod_addon_amount");

                    b.Property<decimal?>("CodAddOnPercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cod_addon_percentage");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("HasCodAddOn")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("has_cod_addon");

                    b.Property<bool>("HasVat")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("has_vat");

                    b.Property<bool>("IncludedVat")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("included_vat");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal>("VatPercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vat_percentage");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.HasIndex("BillPaymentTypeId");

                    b.ToTable("bill_payments");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillPaymentType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("description");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("bill_payment_types");

                    b.HasData(
                        new
                        {
                            Id = "3c704e83-57fc-65d5-c394-f2a3b2e71261",
                            Code = "prepaid",
                            Description = "Pre Paid",
                            Index = 1
                        },
                        new
                        {
                            Id = "896ce2a0-e070-722d-352c-3de9c2bfc824",
                            Code = "postpaid",
                            Description = "Post Paid",
                            Index = 2
                        });
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillRecipient", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("AliasName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("alias_name");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.ToTable("bill_recipients");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillRecipientContact", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("address");

                    b.Property<string>("AreaId")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("area_id");

                    b.Property<string>("BillRecipientId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_recipient_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email");

                    b.Property<string>("PrimaryPhone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("primary_phone");

                    b.Property<string>("SecondaryPhone")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("secondary_phone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("BillRecipientId")
                        .IsUnique();

                    b.ToTable("bill_recipient_contacts");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShipping", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.ToTable("bill_shippings");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingFreeRule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<string>("BillShippingId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_shipping_id");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex("BillShippingId")
                        .IsUnique();

                    b.ToTable("bill_shipping_free_rules");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingRange", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<int>("Begin")
                        .HasColumnType("int")
                        .HasColumnName("begin");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cost");

                    b.Property<int>("End")
                        .HasColumnType("int")
                        .HasColumnName("end");

                    b.Property<string>("ShippingRangeRuleId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_shipping_range_rule_id");

                    b.HasKey("Id");

                    b.HasIndex("ShippingRangeRuleId");

                    b.ToTable("bill_shipping_ranges");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingRangeRule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BillShippingId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_shipping_id");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled");

                    b.HasKey("Id");

                    b.HasIndex("BillShippingId")
                        .IsUnique();

                    b.ToTable("bill_shipping_range_rules");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingTotalRule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BillShippingId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_shipping_id");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cost");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled");

                    b.HasKey("Id");

                    b.HasIndex("BillShippingId")
                        .IsUnique();

                    b.ToTable("bill_shipping_total_rules");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("description");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("bill_statuses");

                    b.HasData(
                        new
                        {
                            Id = "5d2e6c7c-ab48-a037-07cb-f70d3ea25fa4",
                            Code = "pending",
                            Description = "Pending",
                            Index = 1
                        },
                        new
                        {
                            Id = "34ad59e5-3d90-713d-7a14-88eaeed707f1",
                            Code = "notified",
                            Description = "Notified",
                            Index = 2
                        },
                        new
                        {
                            Id = "6d7d53c7-ec48-61f2-749c-09a9f284bd45",
                            Code = "rejected",
                            Description = "Rejected",
                            Index = 3
                        },
                        new
                        {
                            Id = "c521a7ed-c6f8-ae1d-e37c-a15ce3c4d881",
                            Code = "confirmed",
                            Description = "Confirmed",
                            Index = 4
                        },
                        new
                        {
                            Id = "0a1e8838-0324-c29d-621e-1d6f86cb71f7",
                            Code = "cancelled",
                            Description = "Cancelled",
                            Index = 5
                        },
                        new
                        {
                            Id = "51ed2d6b-1ad8-0344-d8a4-bd25fa1e57ee",
                            Code = "done",
                            Description = "Done",
                            Index = 6
                        },
                        new
                        {
                            Id = "561f110d-4996-f585-62aa-aaf9d2980787",
                            Code = "archived",
                            Description = "Archived",
                            Index = 7
                        },
                        new
                        {
                            Id = "0b2f60da-2f16-bfcc-6b15-0cfcfc7a7379",
                            Code = "deleted",
                            Description = "Deleted",
                            Index = 8
                        });
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillTag", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("tag_id");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("BillId", "TagId")
                        .IsUnique();

                    b.ToTable("bill_tags");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Parcel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsPacked")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_packed");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_printed");

                    b.Property<string>("ParcelStatusId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("parcel_status_id");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("remark");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ParcelStatusId");

                    b.ToTable("parcels");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.ParcelStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("description");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("parcel_statuses");

                    b.HasData(
                        new
                        {
                            Id = "845e6ac7-bde4-52ee-7e27-4ea30c680d79",
                            Code = "active",
                            Description = "Active",
                            Index = 1
                        },
                        new
                        {
                            Id = "0a1e8838-0324-c29d-621e-1d6f86cb71f7",
                            Code = "cancelled",
                            Description = "Cancelled",
                            Index = 2
                        });
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Payment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bill_id");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("EvidenceId")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("evidence_id");

                    b.Property<DateTime>("PayOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("pay_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("PaymentNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("payment_no");

                    b.Property<string>("PaymentStatusId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("payment_status_id");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("remark");

                    b.HasKey("Id");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("BillId", "PaymentNo")
                        .IsUnique();

                    b.ToTable("payments");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.PaymentStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("description");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("payment_statuses");

                    b.HasData(
                        new
                        {
                            Id = "5d2e6c7c-ab48-a037-07cb-f70d3ea25fa4",
                            Code = "pending",
                            Description = "Pending",
                            Index = 1
                        },
                        new
                        {
                            Id = "6d7d53c7-ec48-61f2-749c-09a9f284bd45",
                            Code = "rejected",
                            Description = "Rejected",
                            Index = 2
                        },
                        new
                        {
                            Id = "1a894d3e-f35d-d0d6-d7dd-9432a1bc6470",
                            Code = "accepted",
                            Description = "Accepted",
                            Index = 3
                        });
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.PaymentVerification", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<bool>("CanVerify")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_verifiy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("DuplicateTo")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("duplicate_to");

                    b.Property<bool>("IsCorrectAmount")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_correct_amount");

                    b.Property<bool>("IsCorrectBankAccountName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_correct_bank_account_name");

                    b.Property<bool>("IsCorrectBankAccountNumber")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_correct_bank_account_number");

                    b.Property<bool>("IsProceed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_proceed");

                    b.Property<bool>("IsUnique")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_unique");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("payment_id");

                    b.Property<string>("PaymentVerificationStatusId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("payment_verification_status_id");

                    b.Property<string>("Remark")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("remark");

                    b.Property<decimal>("UnBalanceAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unbalance_amount");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.HasIndex("PaymentVerificationStatusId");

                    b.ToTable("payment_verifications");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.PaymentVerificationDetail", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("DestinationBankAccountDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("destination_bank_account_display_name");

                    b.Property<string>("DestinationBankAccountName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("destination_bank_account_name");

                    b.Property<string>("DestinationBankAccountNumber")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("destination_bank_account_number");

                    b.Property<string>("DestinationBankAccountType")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("destination_bank_account_type");

                    b.Property<string>("DestinationBankCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("destination_bank_code");

                    b.Property<string>("PaymentVerificationId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("payment_verification_id");

                    b.Property<string>("SourceBankAccountDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("source_bank_account_display_name");

                    b.Property<string>("SourceBankAccountName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("source_bank_account_name");

                    b.Property<string>("SourceBankAccountNumber")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("source_bank_account_number");

                    b.Property<string>("SourceBankAccountType")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("source_bank_account_type");

                    b.Property<string>("SourceBankCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("source_bank_code");

                    b.Property<DateTime>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("transaction_date")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("TransactionRefNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("transaction_ref_no");

                    b.HasKey("Id");

                    b.HasIndex("PaymentVerificationId")
                        .IsUnique();

                    b.ToTable("payment_verification_details");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.PaymentVerificationStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("description");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("payment_verification_statuses");

                    b.HasData(
                        new
                        {
                            Id = "fb69709b-ec60-ded2-0471-8697313843b2",
                            Code = "not_verify",
                            Description = "Not verify",
                            Index = 1
                        },
                        new
                        {
                            Id = "1d33e72c-5f37-9c3e-9242-461d0de6dd67",
                            Code = "unverifiable",
                            Description = "Unverifiable",
                            Index = 2
                        },
                        new
                        {
                            Id = "a7b0f124-7394-0c25-195c-7fb84e393392",
                            Code = "duplicate",
                            Description = "Duplicate",
                            Index = 3
                        },
                        new
                        {
                            Id = "54920ea8-96a1-a435-60c3-72ab58b8201b",
                            Code = "incorrect_bank_account_number",
                            Description = "Incorrect bank account's number",
                            Index = 4
                        },
                        new
                        {
                            Id = "d48c7861-fb48-a078-8b11-21f950ccad2d",
                            Code = "incorrect_bank_account_name",
                            Description = "Incorrect bank account's name",
                            Index = 5
                        },
                        new
                        {
                            Id = "d7a457ab-7396-121e-e7ef-27325fe02a06",
                            Code = "incorrect_amount",
                            Description = "Incorrect amount",
                            Index = 6
                        },
                        new
                        {
                            Id = "2aa83a72-c283-d578-e7e7-be9b109b406a",
                            Code = "verified",
                            Description = "Verified",
                            Index = 7
                        });
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("channel_id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("color");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("name");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId", "Name")
                        .IsUnique();

                    b.ToTable("tags");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Bill", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.BillChannel", "BillChannel")
                        .WithMany()
                        .HasForeignKey("BillChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SC.App.Services.Bill.Database.Models.BillStatus", "BillStatus")
                        .WithMany()
                        .HasForeignKey("BillStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillChannel");

                    b.Navigation("BillStatus");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillDiscount", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", "Bill")
                        .WithOne("BillDiscount")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillDiscount", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillNotification", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", "Bill")
                        .WithOne("BillNotification")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillNotification", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillPayment", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", "Bill")
                        .WithOne("BillPayment")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillPayment", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SC.App.Services.Bill.Database.Models.BillPaymentType", "BillPaymentType")
                        .WithMany()
                        .HasForeignKey("BillPaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("BillPaymentType");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillRecipient", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", "Bill")
                        .WithOne("BillRecipient")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillRecipient", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillRecipientContact", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.BillRecipient", "BillRecipient")
                        .WithOne("BillRecipientContact")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillRecipientContact", "BillRecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillRecipient");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShipping", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", null)
                        .WithOne("BillShipping")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillShipping", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingFreeRule", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.BillShipping", "BillShipping")
                        .WithOne("BillShippingFreeRule")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillShippingFreeRule", "BillShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillShipping");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingRange", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.BillShippingRangeRule", "BillShippingRangeRule")
                        .WithMany("BillShippingRanges")
                        .HasForeignKey("ShippingRangeRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillShippingRangeRule");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingRangeRule", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.BillShipping", "BillShipping")
                        .WithOne("BillShippingRangeRule")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillShippingRangeRule", "BillShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillShipping");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingTotalRule", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.BillShipping", "BillShipping")
                        .WithOne("BillShippingTotalRule")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.BillShippingTotalRule", "BillShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillShipping");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillTag", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", "Bill")
                        .WithMany("BillTags")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SC.App.Services.Bill.Database.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Parcel", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", "Bill")
                        .WithMany("Parcels")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SC.App.Services.Bill.Database.Models.ParcelStatus", "ParcelStatus")
                        .WithMany()
                        .HasForeignKey("ParcelStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("ParcelStatus");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Payment", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Bill", "Bill")
                        .WithMany("Payments")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SC.App.Services.Bill.Database.Models.PaymentStatus", "PaymentStatus")
                        .WithMany()
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("PaymentStatus");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.PaymentVerification", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.Payment", "Payment")
                        .WithOne("PaymentVerification")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.PaymentVerification", "PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SC.App.Services.Bill.Database.Models.PaymentVerificationStatus", "PaymentVerificationStatus")
                        .WithMany()
                        .HasForeignKey("PaymentVerificationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("PaymentVerificationStatus");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.PaymentVerificationDetail", b =>
                {
                    b.HasOne("SC.App.Services.Bill.Database.Models.PaymentVerification", "PaymentVerification")
                        .WithOne("PaymentVerificationDetail")
                        .HasForeignKey("SC.App.Services.Bill.Database.Models.PaymentVerificationDetail", "PaymentVerificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentVerification");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Bill", b =>
                {
                    b.Navigation("BillDiscount");

                    b.Navigation("BillNotification");

                    b.Navigation("BillPayment");

                    b.Navigation("BillRecipient");

                    b.Navigation("BillShipping");

                    b.Navigation("BillTags");

                    b.Navigation("Parcels");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillRecipient", b =>
                {
                    b.Navigation("BillRecipientContact");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShipping", b =>
                {
                    b.Navigation("BillShippingFreeRule");

                    b.Navigation("BillShippingRangeRule");

                    b.Navigation("BillShippingTotalRule");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.BillShippingRangeRule", b =>
                {
                    b.Navigation("BillShippingRanges");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.Payment", b =>
                {
                    b.Navigation("PaymentVerification");
                });

            modelBuilder.Entity("SC.App.Services.Bill.Database.Models.PaymentVerification", b =>
                {
                    b.Navigation("PaymentVerificationDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
